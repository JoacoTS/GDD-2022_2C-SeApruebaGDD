USE GD2C2022
GO
------DROPS FKs



-----DROPS INDICES


------DROPS TABLAS

IF OBJECT_ID('SE_APRUEBA_GDD.PROD_X_COMPRA') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.PROD_X_COMPRA
  GO

IF OBJECT_ID('SE_APRUEBA_GDD.DESCUENTO_COMPRA_X_COMPRA') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.DESCUENTO_COMPRA_X_COMPRA
  GO

IF OBJECT_ID('SE_APRUEBA_GDD.COMPRA') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.COMPRA
  GO

IF OBJECT_ID('SE_APRUEBA_GDD.DESCUENTO_COMPRA') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.DESCUENTO_COMPRA
 GO

IF OBJECT_ID('SE_APRUEBA_GDD.MEDIO_PAGO_COMPRA') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.MEDIO_PAGO_COMPRA
 GO

IF OBJECT_ID('SE_APRUEBA_GDD.PROVEEDOR') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.PROVEEDOR
 GO

IF OBJECT_ID('SE_APRUEBA_GDD.PROD_X_VENTA') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.PROD_X_VENTA
 GO

IF OBJECT_ID('SE_APRUEBA_GDD.VARIANTE_X_PRODUCTO') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.VARIANTE_X_PRODUCTO
 GO

IF OBJECT_ID('SE_APRUEBA_GDD.VARIANTE') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.VARIANTE
 GO

IF OBJECT_ID('SE_APRUEBA_GDD.TIPO_VARIANTE') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.TIPO_VARIANTE
 GO

IF OBJECT_ID('SE_APRUEBA_GDD.PRODUCTO') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.PRODUCTO
 GO

IF OBJECT_ID('SE_APRUEBA_GDD.MATERIAL') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.MATERIAL
 GO

IF OBJECT_ID('SE_APRUEBA_GDD.CATEGORIA') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.CATEGORIA
 GO

IF OBJECT_ID('SE_APRUEBA_GDD.MARCA') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.MARCA
 GO

IF OBJECT_ID('SE_APRUEBA_GDD.CUPON_X_VENTA') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.CUPON_X_VENTA
 GO

IF OBJECT_ID('SE_APRUEBA_GDD.CUPON') IS NOT NULL
	DROP TABLE SE_APRUEBA_GDD.CUPON
  GO

IF OBJECT_ID('SE_APRUEBA_GDD.DESCUENTO_VENTA_X_VENTA') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.DESCUENTO_VENTA_X_VENTA
 GO

IF OBJECT_ID('SE_APRUEBA_GDD.DESCUENTO_VENTA') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.DESCUENTO_VENTA
 GO

IF OBJECT_ID('SE_APRUEBA_GDD.VENTA') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.VENTA
 GO

IF OBJECT_ID('SE_APRUEBA_GDD.ENVIO_VENTA') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.ENVIO_VENTA
 GO

IF OBJECT_ID('SE_APRUEBA_GDD.MEDIO_PAGO_VENTA') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.MEDIO_PAGO_VENTA
 GO

IF OBJECT_ID('SE_APRUEBA_GDD.CANAL_VENTA') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.CANAL_VENTA
 GO

IF OBJECT_ID('SE_APRUEBA_GDD.CLIENTE') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.CLIENTE
 GO

IF OBJECT_ID('SE_APRUEBA_GDD.UBICACION') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.UBICACION
 GO

IF OBJECT_ID('SE_APRUEBA_GDD.CODIGO_POSTAL') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.CODIGO_POSTAL
 GO

IF OBJECT_ID('SE_APRUEBA_GDD.PROVINCIA') IS NOT NULL
  DROP TABLE SE_APRUEBA_GDD.PROVINCIA
 GO

-----DROPS PROCEDURES



-----DROPS TRIGGERS



-----DROP ESQUEMA

IF EXISTS (SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'SE_APRUEBA_GDD')
    DROP SCHEMA SE_APRUEBA_GDD
GO


--CREACION ESQUEMA

CREATE SCHEMA SE_APRUEBA_GDD AUTHORIZATION -- Después de authorization vá la contraseña

GO



--CREACION DE TABLAS


create table SE_APRUEBA_GDD.PROVINCIA (
	PROVINCIA_CODIGO decimal(19,0) identity(1,1),
	PROVINCIA_NOMBRE nvarchar(255),
	PRIMARY KEY (PROVINCIA_CODIGO)
);

create table SE_APRUEBA_GDD.CODIGO_POSTAL (
	CODIGO_POSTAL decimal(19,0),
	PROVINCIA_ID decimal(19,0),
	PRIMARY KEY (CODIGO_POSTAL),
	FOREIGN KEY (PROVINCIA_ID) REFERENCES PROVINCIA(PROVINCIA_CODIGO)
);

create table SE_APRUEBA_GDD.UBICACION (
	UBICACION_ID decimal(19,0) identity(1,1),
	UBICACION_LOCALIDAD nvarchar(255),
	UBICACION_CODIGO_POSTAL decimal(19,0),
	PRIMARY KEY (UBICACION_ID),
	FOREIGN KEY (UBICACION_CODIGO_POSTAL) REFERENCES CODIGO_POSTAL(CODIGO_POSTAL)
);

create table SE_APRUEBA_GDD.CLIENTE (
	CLIENTE_ID decimal(19, 0) identity(1,1),
	CLIENTE_UBICACION decimal(19, 0),
	CLIENTE_NOMBRE nvarchar(255),
	CLIENTE_APELLIDO nvarchar(255),
	CLIENTE_DNI decimal(18, 0),
	CLIENTE_DIRECCION nvarchar(255),
	CLIENTE_TELEFONO decimal(18,0),
	CLIENTE_MAIL nvarchar(255),
	CLIENTE_FECHA_NAC date,
	PRIMARY KEY (CLIENTE_ID),
	FOREIGN KEY (CLIENTE_UBICACION) REFERENCES UBICACION(UBICACION_ID)
);

create table SE_APRUEBA_GDD.CANAL_VENTA (
	CANAL_VENTA_ID decimal(19, 0) identity(1,1),
	CANAL_VENTA_TIPO nvarchar(2255),
	CANAL_VENTA_COSTO decimal(18,2),
	PRIMARY KEY (CANAL_VENTA_ID)
);

create table SE_APRUEBA_GDD.MEDIO_PAGO_VENTA (
	MEDIO_PAGO_ID decimal(19,0) identity(1,1),
	MEDIO_PAGO_TIPO nvarchar(255),
	MEDIO_PAGO_COSTO decimal(18,2),
	MEDIO_PAGO_DESCUENTO decimal(18, 2),
	PRIMARY KEY (MEDIO_PAGO_ID)
);

create table SE_APRUEBA_GDD.ENVIO_VENTA (
	ENVIO_VENTA_ID decimal(19,0),
	ENVIO_VENTA_TIPO nvarchar(255),
	ENVIO_VENTA_UBICACION decimal(19,0),
	ENVIO_VENTA_PRECIO decimal(18,2),
	PRIMARY KEY (ENVIO_VENTA_ID),
	FOREIGN KEY (ENVIO_VENTA_UBICACION) REFERENCES UBICACION(UBICACION_ID)
);

create table SE_APRUEBA_GDD.VENTA (
	VENTA_ID decimal(19,0),
	VENTA_FECHA date,
	VENTA_CLIENTE decimal(19,0),
	VENTA_CANAL decimal(19,0),
	VENTA_MEDIO_PAGO decimal(19,0),
	VENTA_ENVIO decimal(19,0),
	VENTA_TOTAL decimal(18,2),
	PRIMARY KEY (VENTA_ID),
	FOREIGN KEY (VENTA_CLIENTE) REFERENCES CLIENTE(CLIENTE_ID),
	FOREIGN KEY (VENTA_CANAL) REFERENCES CANAL_VENTA(CANAL_VENTA_ID),
	FOREIGN KEY (VENTA_MEDIO_PAGO) REFERENCES MEDIO_PAGO_VENTA(MEDIO_PAGO_ID),
	FOREIGN KEY (VENTA_ENVIO) REFERENCES ENVIO_VENTA(ENVIO_VENTA_ID)
);

create table SE_APRUEBA_GDD.DESCUENTO_VENTA (
	DESCUENTO_CONCEPTO_VENTA nvarchar(50),
	DESCUENTO_TIPO nvarchar(50),
	PRIMARY KEY (DESCUENTO_CONCEPTO_VENTA)
);

create table SE_APRUEBA_GDD.DESCUENTO_VENTA_X_VENTA (
	DESCUENTO_X_VENTA_ID decimal(19,0),
	VENTA_ID decimal(19, 0),
	DESCUENTO_CONCEPTO_VENTA_ID nvarchar(50),
	DESCUENTO_VENTA_IMPORTE decimal(18,2),
	PRIMARY KEY (DESCUENTO_X_VENTA_ID),
	FOREIGN KEY (VENTA_ID) REFERENCES VENTA(VENTA_ID),
	FOREIGN KEY (DESCUENTO_CONCEPTO_VENTA_ID) REFERENCES DESCUENTO_VENTA(DESCUENTO_CONCEPTO_VENTA)
);

create table SE_APRUEBA_GDD.CUPON (
	CUPON_CODIGO nvarchar(255),
	CUPON_IMPORTE decimal(18,2),
	FECHA_DESDE date,
	FECHA_HASTA date,
	CUPON_TIPO nvarchar(50),
	CUPON_VALOR decimal(18,2),
	PRIMARY KEY (CUPON_CODIGO)
);

create table SE_APRUEBA_GDD.CUPON_X_VENTA (
	CUPON_CODIGO_VENTA nvarchar(255) not null,
	VENTA_ID_CUPON decimal(19,0) not null,
	FOREIGN KEY (CUPON_CODIGO_VENTA) REFERENCES CUPON(CUPON_CODIGO),
	FOREIGN KEY (VENTA_ID_CUPON) REFERENCES VENTA(VENTA_ID)
);

create table SE_APRUEBA_GDD.MARCA (
	MARCA_ID decimal(19, 0),
	MARCA_DESCRIPCION nvarchar(50),
	PRIMARY KEY (MARCA_ID)
);

create table SE_APRUEBA_GDD.CATEGORIA (
	CATEGORIA_ID decimal(19,0),
	CATEGORIA_DESCRIPCION nvarchar(50),
	PRIMARY KEY (CATEGORIA_ID)
);

create table SE_APRUEBA_GDD.MATERIAL (
	MATERIAL_ID decimal(19,0),
	MATERIAL_DESCRIPCION nvarchar(50),
	PRIMARY KEY (MATERIAL_ID)
);

create table SE_APRUEBA_GDD.PRODUCTO (
	PRODUCTO_ID nvarchar(50),
	PRODUCTO_DESCRIPCION nvarchar(50),
	PRODUCTO_NOMBRE nvarchar(50),
	PRODUCTO_MARCA decimal(19,0),
	PRODUCTO_CATEGORIA decimal(19,0),
	PRODUCTO_MATERIAL decimal(19,0),
	PRIMARY KEY (PRODUCTO_ID),
	FOREIGN KEY (PRODUCTO_MARCA) REFERENCES MARCA(MARCA_ID),
	FOREIGN KEY (PRODUCTO_CATEGORIA) REFERENCES CATEGORIA(CATEGORIA_ID),
	FOREIGN KEY (PRODUCTO_MATERIAL) REFERENCES MATERIAL(MATERIAL_ID)
);

create table SE_APRUEBA_GDD.TIPO_VARIANTE (
	TIPO_VARIANTE_ID nvarchar(2),
	TIPO_VARIANTE_DETALLE nvarchar(50),
	PRIMARY KEY (TIPO_VARIANTE_ID)
);

create table SE_APRUEBA_GDD.VARIANTE (
	VARIANTE_ID nvarchar(50),
	VARIANTE_TIPO_VAR_ID nvarchar(2),
	VARIANTE_DETALLE nvarchar(50),
	PRIMARY KEY (VARIANTE_ID),
	FOREIGN KEY (VARIANTE_TIPO_VAR_ID) REFERENCES TIPO_VARIANTE(TIPO_VARIANTE_ID)
);

create table SE_APRUEBA_GDD.VARIANTE_X_PRODUCTO (
	VARIANTE_X_PRODUCTO_ID nvarchar(50),
	VARIANTE_ID nvarchar(50),
	PRODUCTO_ID nvarchar(50),
	VARIANTE_X_PRODUCTO_STOC decimal(19,0),
	VARIANTE_X_PRODUCTO_PRECIO decimal(18, 2),
	PRIMARY KEY (VARIANTE_X_PRODUCTO_ID),
	FOREIGN KEY (VARIANTE_ID) REFERENCES VARIANTE(VARIANTE_ID),
	FOREIGN KEY (PRODUCTO_ID) REFERENCES PRODUCTO(PRODUCTO_ID)
);

create table SE_APRUEBA_GDD.PROD_X_VENTA (
	VARIANTE_X_PRODUCTO_ID nvarchar(50) not null,
	VENTA_ID decimal(19, 0) not null,
	VENTA_PRODUCTO_CANTIDAD decimal(18,0),
	VENTA_PRECIO_TOTAL decimal(18,2),
	FOREIGN KEY (VARIANTE_X_PRODUCTO_ID) REFERENCES VARIANTE_X_PRODUCTO(VARIANTE_X_PRODUCTO_ID),
	FOREIGN KEY (VENTA_ID) REFERENCES VENTA(VENTA_ID)
);

create table SE_APRUEBA_GDD.PROVEEDOR (
	PROVEEDOR_CUIT nvarchar(50),
	PROVEEDOR_RAZON_SOCIAL nvarchar(50),
	PROVEEDOR_DOMICILIO nvarchar(50),
	PROVEEDOR_MAIL nvarchar(50),
	UBICACION_PROVEEDOR decimal(19,0),
	PRIMARY KEY (PROVEEDOR_CUIT)
);

create table SE_APRUEBA_GDD.MEDIO_PAGO_COMPRA (
	MEDIO_PAGO_ID decimal(19, 0),
	MEDIO_PAGO_TIPO nvarchar(255),
	PRIMARY KEY (MEDIO_PAGO_ID)
)

create table SE_APRUEBA_GDD.DESCUENTO_COMPRA (
	DESCUENTO_COMPRA_CODIGO decimal(19,0),
	DESCUENTO_COMPRA_VALOR decimal(18, 2),
	PRIMARY KEY (DESCUENTO_COMPRA_CODIGO)
);

create table SE_APRUEBA_GDD.COMPRA (
	COMPRA_NUMERO decimal(19, 0),
	COMPRA_PROVEEDOR nvarchar(50),
	COMPRA_MEDIO_PAGO decimal(19,0),
	COMPRA_TOTAL decimal(18,2),
	COMPRA_FECHA date,
	PRIMARY KEY (COMPRA_NUMERO),
	FOREIGN KEY (COMPRA_PROVEEDOR) REFERENCES PROVEEDOR(PROVEEDOR_CUIT),
	FOREIGN KEY (COMPRA_MEDIO_PAGO) REFERENCES MEDIO_PAGO_COMPRA(MEDIO_PAGO_ID)
);

create table SE_APRUEBA_GDD.DESCUENTO_COMPRA_X_COMPRA (
	DESCUENTO_COMP_CODIGO decimal(19,0) not null,
	COMP_CODIGO decimal(19,0) not null,
	FOREIGN KEY (DESCUENTO_COMP_CODIGO) REFERENCES DESCUENTO_COMPRA(DESCUENTO_COMPRA_CODIGO),
	FOREIGN KEY (COMP_CODIGO) REFERENCES COMPRA(COMPRA_NUMERO)
);

create table SE_APRUEBA_GDD.PROD_X_COMPRA (
	PROD_COMPRA_NUMERO decimal(19, 0),
	VARIANTE_X_PRODUCTO_ID nvarchar(50),
	COMPRA_PRODUCTO_CANTIDAD decimal(18,0),
	COMPRA_TOTAL decimal(18,2),
	FOREIGN KEY (PROD_COMPRA_NUMERO) REFERENCES COMPRA(COMPRA_NUMERO),
	FOREIGN KEY (VARIANTE_X_PRODUCTO_ID) REFERENCES VARIANTE_X_PRODUCTO(VARIANTE_X_PRODUCTO_ID)
);

--	CREACIÓN DE ÍNDICES



--  MIGRACIÓN DE DATOS (INSERTS)

CREATE PROCEDURE migrar_provincias 
AS
BEGIN
	INSERT INTO PROVINCIA
	(PROVINCIA_NOMBRE)
	SELECT PROVEEDOR_PROVINCIA
	FROM GD2C2022.gd_esquema.Maestra
	WHERE PROVEEDOR_PROVINCIA IS NOT NULL
	GROUP BY PROVEEDOR_PROVINCIA
	union
	select CLIENTE_PROVINCIA
	from GD2C2022.gd_esquema.Maestra
	WHERE CLIENTE_PROVINCIA IS NOT NULL
	GROUP BY CLIENTE_PROVINCIA
END
GO

CREATE PROCEDURE migrar_codigo_postal 
AS
BEGIN
	INSERT INTO CODIGO_POSTAL
	(CODIGO_POSTAL, PROVINCIA_ID)
	select CLIENTE_CODIGO_POSTAL,
	case when cliente_provincia is not null
	then
	(
		select PROVINCIA_CODIGO
			from SE_APRUEBA_GDD.dbo.PROVINCIA
			where CLIENTE_PROVINCIA = PROVINCIA_NOMBRE
			group by PROVINCIA_CODIGO
	)
	else null end
	from GD2C2022.gd_esquema.Maestra
	where CLIENTE_CODIGO_POSTAL is not null
	group by CLIENTE_CODIGO_POSTAL, CLIENTE_PROVINCIA
	

	insert into CODIGO_POSTAL
	select PROVEEDOR_CODIGO_POSTAL,
	(
		select PROVINCIA_CODIGO
			from SE_APRUEBA_GDD.dbo.PROVINCIA
			where
				PROVEEDOR_PROVINCIA = PROVINCIA_NOMBRE
			group by PROVINCIA_CODIGO
	)
	from GD2C2022.gd_esquema.Maestra
	where
		PROVEEDOR_CODIGO_POSTAL is not null 
		and
		PROVEEDOR_CODIGO_POSTAL not in (select CODIGO_POSTAL from SE_APRUEBA_GDD.dbo.CODIGO_POSTAL)
	group by PROVEEDOR_CODIGO_POSTAL, PROVEEDOR_PROVINCIA

END
GO

create procedure migrar_ubicacion as
begin
	insert into UBICACION
	(UBICACION_CODIGO_POSTAL, UBICACION_LOCALIDAD)
	select
		(select CODIGO_POSTAL from CODIGO_POSTAL
		where CLIENTE_CODIGO_POSTAL = CODIGO_POSTAL),
		CLIENTE_LOCALIDAD
	from GD2C2022.gd_esquema.Maestra
	where CLIENTE_LOCALIDAD is not null
	group by CLIENTE_CODIGO_POSTAL, CLIENTE_LOCALIDAD

	insert into CODIGO_POSTAL
	select 
	(
		select CODIGO_POSTAL
			from SE_APRUEBA_GDD.dbo.CODIGO_POSTAL
			where PROVEEDOR_CODIGO_POSTAL = CODIGO_POSTAL
	),
	PROVEEDOR_LOCALIDAD
	from GD2C2022.gd_esquema.Maestra
	where
		PROVEEDOR_LOCALIDAD is not null 
		and
		PROVEEDOR_CODIGO_POSTAL not in (select CODIGO_POSTAL from SE_APRUEBA_GDD.dbo.CODIGO_POSTAL)
	group by PROVEEDOR_CODIGO_POSTAL, PROVEEDOR_LOCALIDAD

end
go

create procedure migrar_clientes as
begin
	insert into CLIENTE
	(CLIENTE_UBICACION,
	CLIENTE_NOMBRE,
	CLIENTE_APELLIDO,
	CLIENTE_DNI,
	CLIENTE_DIRECCION,
	CLIENTE_TELEFONO,
	CLIENTE_MAIL,
	CLIENTE_FECHA_NAC)
	select
		case when CLIENTE_CODIGO_POSTAL is not null or CLIENTE_LOCALIDAD is not null
		then
		(select UBICACION_ID from UBICACION
		where CLIENTE_CODIGO_POSTAL = UBICACION_CODIGO_POSTAL and CLIENTE_LOCALIDAD = UBICACION_LOCALIDAD)
		else null end,
		CLIENTE_NOMBRE,
		CLIENTE_APELLIDO,
		CLIENTE_DNI,
		CLIENTE_DIRECCION,
		CLIENTE_TELEFONO,
		CLIENTE_MAIL,
		CLIENTE_FECHA_NAC
	from GD2C2022.gd_esquema.Maestra
	where CLIENTE_NOMBRE is not null or CLIENTE_APELLIDO is not null or CLIENTE_DNI is not null
	group by
		CLIENTE_CODIGO_POSTAL,
		CLIENTE_LOCALIDAD,
		CLIENTE_NOMBRE,
		CLIENTE_APELLIDO,
		CLIENTE_DNI,
		CLIENTE_DIRECCION,
		CLIENTE_TELEFONO,
		CLIENTE_MAIL,
		CLIENTE_FECHA_NAC
end
go

create procedure migrar_canal_venta as
begin
	insert into CANAL_VENTA
	(CANAL_VENTA_TIPO, CANAL_VENTA_COSTO)
	select
		VENTA_CANAL,
		VENTA_CANAL_COSTO
	from GD2C2022.gd_esquema.Maestra
	where VENTA_CANAL is not null
	group by VENTA_CANAL, VENTA_CANAL_COSTO

end
go

create procedure migrar_medio_pago_venta as
begin
	insert into MEDIO_PAGO_VENTA
	(MEDIO_PAGO_TIPO, MEDIO_PAGO_COSTO, MEDIO_PAGO_DESCUENTO)
	select
		VENTA_MEDIO_PAGO,
		VENTA_MEDIO_PAGO_COSTO,
		round(avg(VENTA_DESCUENTO_IMPORTE/VENTA_TOTAL) ,2)
	from GD2C2022.gd_esquema.Maestra
	where VENTA_MEDIO_PAGO = VENTA_DESCUENTO_CONCEPTO
	group by VENTA_MEDIO_PAGO, VENTA_MEDIO_PAGO_COSTO
end
go




