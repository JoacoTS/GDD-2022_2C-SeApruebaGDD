
create database TP_Tablas_separadas

use TP_Tablas_separadas

create table PROVINCIA (
	PROVINCIA_CODIGO decimal(19,0),
	PROVINCIA_NOMBRE nvarchar(255),
	PRIMARY KEY (PROVINCIA_CODIGO)
);

create table CODIGO_POSTAL (
	CODIGO_POSTAL decimal(19,0),
	PROVINCIA_ID decimal(19,0),
	PRIMARY KEY (CODIGO_POSTAL),
	FOREIGN KEY (PROVINCIA_ID) REFERENCES PROVINCIA(PROVINCIA_CODIGO)
);

create table UBICACION (
	UBICACION_ID decimal(19,0),
	UBICACION_LOCALIDAD nvarchar(255),
	UBICACION_CODIGO_POSTAL decimal(19,0),
	PRIMARY KEY (UBICACION_ID),
	FOREIGN KEY (UBICACION_CODIGO_POSTAL) REFERENCES CODIGO_POSTAL(CODIGO_POSTAL)
);

create table CLIENTE (
	CLIENTE_ID decimal(19, 0),
	CLIENTE_UBICACION decimal(19, 0),
	CLIENTE_NOMBRE nvarchar(255),
	CLIENTE_APELLIDO nvarchar(255),
	CLIENTE_DNI decimal(18, 0),
	CLIENTE_DIRECCION nvarchar(255),
	CLIENTE_TELEFONO decimal(18,0),
	CLIENTE_MAIL nvarchar(255),
	CLIENTE_FECHA_NAC date,
	PRIMARY KEY (CLIENTE_ID),
	FOREIGN KEY (CLIENTE_UBICACION) REFERENCES UBICACION(UBICACION_ID)
);

create table CANAL_VENTA (
	CANAL_VENTA_ID decimal(19, 0),
	CANAL_VENTA_TIPO nvarchar(2255),
	CANAL_VENTA_COSTO decimal(18,2),
	PRIMARY KEY (CANAL_VENTA_ID)
);

create table MEDIO_PAGO_VENTA (
	MEDIO_PAGO_ID decimal(19,0),
	MEDIO_PAGO_TIPO nvarchar(255),
	MEDIO_PAGO_COSTO decimal(18,2),
	PRIMARY KEY (MEDIO_PAGO_ID)
);

create table ENVIO_VENTA (
	ENVIO_VENTA_ID decimal(19,0),
	ENVIO_VENTA_TIPO nvarchar(255),
	ENVIO_VENTA_UBICACION decimal(19,0),
	ENVIO_VENTA_PRECIO decimal(18,2),
	PRIMARY KEY (ENVIO_VENTA_ID),
	FOREIGN KEY (ENVIO_VENTA_UBICACION) REFERENCES UBICACION(UBICACION_ID)
);

create table VENTA (
	VENTA_ID decimal(19,0),
	VENTA_FECHA date,
	VENTA_CLIENTE decimal(19,0),
	VENTA_CANAL decimal(19,0),
	VENTA_MEDIO_PAGO decimal(19,0),
	VENTA_ENVIO decimal(19,0),
	VENTA_TOTAL decimal(18,2),
	PRIMARY KEY (VENTA_ID),
	FOREIGN KEY (VENTA_CLIENTE) REFERENCES CLIENTE(CLIENTE_ID),
	FOREIGN KEY (VENTA_CANAL) REFERENCES CANAL_VENTA(CANAL_VENTA_ID),
	FOREIGN KEY (VENTA_MEDIO_PAGO) REFERENCES MEDIO_PAGO_VENTA(MEDIO_PAGO_ID),
	FOREIGN KEY (VENTA_ENVIO) REFERENCES ENVIO_VENTA(ENVIO_VENTA_ID)
);

create table DESCUENTO_VENTA (
	DESCUENTO_CONCEPTO_VENTA nvarchar(50),
	DESCUENTO_TIPO nvarchar(50),
	PRIMARY KEY (DESCUENTO_CONCEPTO_VENTA)
);

create table DESCUENTO_VENTA_X_VENTA (
	DESCUENTO_X_VENTA_ID decimal(19,0),
	VENTA_ID decimal(19, 0),
	DESCUENTO_CONCEPTO_VENTA_ID nvarchar(50),
	DESCUENTO_VENTA_IMPORTE decimal(18,2),
	PRIMARY KEY (DESCUENTO_X_VENTA_ID),
	FOREIGN KEY (VENTA_ID) REFERENCES VENTA(VENTA_ID),
	FOREIGN KEY (DESCUENTO_CONCEPTO_VENTA_ID) REFERENCES DESCUENTO_VENTA(DESCUENTO_CONCEPTO_VENTA)
);

create table CUPON (
	CUPON_CODIGO nvarchar(255),
	CUPON_IMPORTE decimal(18,2),
	FECHA_DESDE date,
	FECHA_HASTA date,
	CUPON_TIPO nvarchar(50),
	CUPON_VALOR decimal(18,2),
	PRIMARY KEY (CUPON_CODIGO)
);

create table CUPON_X_VENTA (
	CUPON_CODIGO_VENTA nvarchar(255) not null,
	VENTA_ID_CUPON decimal(19,0) not null,
	FOREIGN KEY (CUPON_CODIGO_VENTA) REFERENCES CUPON(CUPON_CODIGO),
	FOREIGN KEY (VENTA_ID_CUPON) REFERENCES VENTA(VENTA_ID)
);

create table MARCA (
	MARCA_ID decimal(19, 0),
	MARCA_DESCRIPCION nvarchar(50),
	PRIMARY KEY (MARCA_ID)
);

create table CATEGORIA (
	CATEGORIA_ID decimal(19,0),
	CATEGORIA_DESCRIPCION nvarchar(50),
	PRIMARY KEY (CATEGORIA_ID)
);

create table MATERIAL (
	MATERIAL_ID decimal(19,0),
	MATERIAL_DESCRIPCION nvarchar(50),
	PRIMARY KEY (MATERIAL_ID)
);

create table PRODUCTO (
	PRODUCTO_ID nvarchar(50),
	PRODUCTO_DESCRIPCION nvarchar(50),
	PRODUCTO_NOMBRE nvarchar(50),
	PRODUCTO_MARCA decimal(19,0),
	PRODUCTO_CATEGORIA decimal(19,0),
	PRODUCTO_MATERIAL decimal(19,0),
	PRIMARY KEY (PRODUCTO_ID),
	FOREIGN KEY (PRODUCTO_MARCA) REFERENCES MARCA(MARCA_ID),
	FOREIGN KEY (PRODUCTO_CATEGORIA) REFERENCES CATEGORIA(CATEGORIA_ID),
	FOREIGN KEY (PRODUCTO_MATERIAL) REFERENCES MATERIAL(MATERIAL_ID)
);

create table TIPO_VARIANTE (
	TIPO_VARIANTE_ID nvarchar(2),
	TIPO_VARIANTE_DETALLE nvarchar(50),
	PRIMARY KEY (TIPO_VARIANTE_ID)
);

create table VARIANTE (
	VARIANTE_ID nvarchar(50),
	VARIANTE_TIPO_VAR_ID nvarchar(2),
	VARIANTE_DETALLE nvarchar(50),
	PRIMARY KEY (VARIANTE_ID),
	FOREIGN KEY (VARIANTE_TIPO_VAR_ID) REFERENCES TIPO_VARIANTE(TIPO_VARIANTE_ID)
);

create table VARIANTE_X_PRODUCTO (
	VARIANTE_X_PRODUCTO_ID nvarchar(50),
	VARIANTE_ID nvarchar(50),
	PRODUCTO_ID nvarchar(50),
	VARIANTE_X_PRODUCTO_STOC decimal(19,0),
	VARIANTE_X_PRODUCTO_PRECIO decimal(18, 2),
	PRIMARY KEY (VARIANTE_X_PRODUCTO_ID),
	FOREIGN KEY (VARIANTE_ID) REFERENCES VARIANTE(VARIANTE_ID),
	FOREIGN KEY (PRODUCTO_ID) REFERENCES PRODUCTO(PRODUCTO_ID)
);

create table PROD_X_VENTA (
	VARIANTE_X_PRODUCTO_ID nvarchar(50) not null,
	VENTA_ID decimal(19, 0) not null,
	VENTA_PRODUCTO_CANTIDAD decimal(18,0),
	VENTA_PRECIO_TOTAL decimal(18,2),
	FOREIGN KEY (VARIANTE_X_PRODUCTO_ID) REFERENCES VARIANTE_X_PRODUCTO(VARIANTE_X_PRODUCTO_ID),
	FOREIGN KEY (VENTA_ID) REFERENCES VENTA(VENTA_ID)
);

create table PROVEEDOR (
	PROVEEDOR_CUIT nvarchar(50),
	PROVEEDOR_RAZON_SOCIAL nvarchar(50),
	PROVEEDOR_DOMICILIO nvarchar(50),
	PROVEEDOR_MAIL nvarchar(50),
	UBICACION_PROVEEDOR decimal(19,0),
	PRIMARY KEY (PROVEEDOR_CUIT)
);

create table MEDIO_PAGO_COMPRA (
	MEDIO_PAGO_ID decimal(19, 0),
	MEDIO_PAGO_TIPO nvarchar(255),
	PRIMARY KEY (MEDIO_PAGO_ID)
)

create table DESCUENTO_COMPRA (
	DESCUENTO_COMPRA_CODIGO decimal(19,0),
	DESCUENTO_COMPRA_VALOR decimal(18, 2),
	PRIMARY KEY (DESCUENTO_COMPRA_CODIGO)
);

create table COMPRA (
	COMPRA_NUMERO decimal(19, 0),
	COMPRA_PROVEEDOR nvarchar(50),
	COMPRA_MEDIO_PAGO decimal(19,0),
	COMPRA_TOTAL decimal(18,2),
	COMPRA_FECHA date,
	PRIMARY KEY (COMPRA_NUMERO),
	FOREIGN KEY (COMPRA_PROVEEDOR) REFERENCES PROVEEDOR(PROVEEDOR_CUIT),
	FOREIGN KEY (COMPRA_MEDIO_PAGO) REFERENCES MEDIO_PAGO_COMPRA(MEDIO_PAGO_ID)
);

create table DESCUENTO_COMPRA_X_COMPRA (
	DESCUENTO_COMP_CODIGO decimal(19,0) not null,
	COMP_CODIGO decimal(19,0) not null,
	FOREIGN KEY (DESCUENTO_COMP_CODIGO) REFERENCES DESCUENTO_COMPRA(DESCUENTO_COMPRA_CODIGO),
	FOREIGN KEY (COMP_CODIGO) REFERENCES COMPRA(COMPRA_NUMERO)
);

create table PROD_X_COMPRA (
	PROD_COMPRA_NUMERO decimal(19, 0),
	VARIANTE_X_PRODUCTO_ID nvarchar(50),
	COMPRA_PRODUCTO_CANTIDAD decimal(18,0),
	COMPRA_TOTAL decimal(18,2),
	FOREIGN KEY (PROD_COMPRA_NUMERO) REFERENCES COMPRA(COMPRA_NUMERO),
	FOREIGN KEY (VARIANTE_X_PRODUCTO_ID) REFERENCES VARIANTE_X_PRODUCTO(VARIANTE_X_PRODUCTO_ID)
);
